#!/bin/bash

#Source debconf lib
. /usr/share/debconf/confmodule

SCRIPT_DIR=$(dirname $(readlink -f $0))

### CONF VARS ###

INSTALL_DIR="/usr/share/raspisms"

#Database & app database
db_get raspisms/database_admin_user
DATABASE_ADMIN_USER=$RET
db_get raspisms/database_admin_password
DATABASE_ADMIN_PASSWORD=$RET
db_get raspisms/database_host
APP_DATABASE_HOST=$RET
db_get raspisms/database_name
APP_DATABASE_NAME=$RET


### Functions ###
error_report () {
    printf "\n\nError on line $(caller)\n\n";
    exit 1
}


do_delete_user () {
    if [ "$1" != "remove" ]; then
        return 0
    fi

    printf "\n"
    printf "Delete user raspisms.\n"
    
    cd $INSTALL_DIR

    deluser raspisms
    delgroup raspisms

    printf "\n"
    printf "Done.\n"
    printf "\n"
}


do_debconf_purge () {
    if [ "$1" != "purge" ]; then
        return 0
    fi
    
    if [ -e /usr/share/debconf/confmodule ]; then
        printf "\n"
        printf "Purge debconf.\n"
        db_reset raspisms
        db_purge
    fi

    printf "\n"
    printf "Done.\n"
    printf "\n"
}

do_delete_database () {
    if [ "$1" != "purge" ]; then
        return 0
    fi

    if [ ! $DATABASE_ADMIN_PASSWORD ]
    then
        DB_INVOKE="mysql --host=$APP_DATABASE_HOST --user=$DATABASE_ADMIN_USER -e "
    else
        DB_INVOKE="mysql --host=$APP_DATABASE_HOST --user=$DATABASE_ADMIN_USER --password=$DATABASE_ADMIN_PASSWORD -e "
    fi

    printf "\n"
    printf "Remove database...\n"
    echo $DB_INVOKE "\"DROP DATABASE \`$APP_DATABASE_NAME\`\""
    $DB_INVOKE "DROP DATABASE \`$APP_DATABASE_NAME\`"
    printf "Done.\n"

    printf "Remove user...\n"
    echo $DB_INVOKE "\"DROP USER IF EXISTS'$APP_DATABASE_USER'@'%'\""
    $DB_INVOKE "DROP USER IF EXISTS '$APP_DATABASE_USER'@'%'"
    printf "Done.\n"

    printf "\n"
}


do_delete_user $1 || exit 1
do_delete_database $1 || exit 1
do_debconf_purge $1 || exit 1

#DEBHELPER#
